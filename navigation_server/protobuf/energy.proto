//-------------------------------------------------------------------------------
// Name:        vedirect.proto
// Purpose:     Victron RS485 messages protobuf definition file
//
// Author:      Laurent Carré
//
// Created:     18/02/2022
// Copyright:   (c) Laurent Carré Sterwen Technology 2021-2022
// Licence:     Eclipse Public License 2.0
//-------------------------------------------------------------------------------

syntax = "proto3";

import "arguments.proto";

// Messages to transmit Victron VE direct messages between the reader and the instrument

enum VE_Error{
  no_error=0;
  Battery_voltage_too_high=2;
  Bulk_time_limit_exceeded=20;
  Current_sensor_issue=21;
  Input_voltage_too_high=33;
  Input_current_too_high=34;
}

enum VE_state {
  Off=0;
  Low_power=1; // not used by MPPT
  Fault=2;
  Bulk=3;
  Absorption=4;
  Float=5;
  Storage=6;
  Equalize=7;
  Starting_up=245;
  Repeated_absorption=246;
  Auto_equalize=247;
  External_control=252;
}

enum VE_MPPT {
  MPPT_Off=0;
  Limited=1;
  Active=2;
}

message MPPT_device {
  string product_id = 1;
  string firmware = 2;
  string serial = 3;
  VE_Error error =4;
  VE_state state=5;
  VE_MPPT mppt_state =7;
  float day_max_power = 6; //Watt
  float day_power = 8; //kilo Watt-heure
}

message solar_output {
  float current = 1;  // Amp
  float voltage =2;   // Volt
  float panel_power =3;  //Watt
}

message request {
  int32 id = 1;
}

message trend_request {
  int32 id=1;
  int32 nb_values=2;
}

message trend_response {
  int32 id=1;
  int32 nb_values=2;
  float interval=3;
  repeated solar_output values=4;
}

service solar_mppt {
  rpc GetDeviceInfo(request) returns (MPPT_device) {}
  rpc GetOutput(request) returns (solar_output) {}
  rpc GetTrend(trend_request) returns (trend_response) {}
}

message energy_svr_cmd {
  string command=1;
  repeated Argument arguments=2;
}

message energy_svr_resp {
  int32 err_code=1;
  string resp_message=2;
  repeated Argument values=3;
}

service energy_service {
  rpc EnergyCommand(energy_svr_cmd) returns(energy_svr_resp) {}
}

