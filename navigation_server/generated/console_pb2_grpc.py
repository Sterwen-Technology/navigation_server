# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import navigation_server.generated.console_pb2 as console__pb2


GRPC_GENERATED_VERSION = '1.66.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in console_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class NavigationConsoleStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCouplers = channel.unary_stream(
                '/NavigationConsole/GetCouplers',
                request_serializer=console__pb2.Request.SerializeToString,
                response_deserializer=console__pb2.CouplerMsg.FromString,
                _registered_method=True)
        self.GetCoupler = channel.unary_unary(
                '/NavigationConsole/GetCoupler',
                request_serializer=console__pb2.Request.SerializeToString,
                response_deserializer=console__pb2.CouplerMsg.FromString,
                _registered_method=True)
        self.CouplerCmd = channel.unary_unary(
                '/NavigationConsole/CouplerCmd',
                request_serializer=console__pb2.Request.SerializeToString,
                response_deserializer=console__pb2.Response.FromString,
                _registered_method=True)
        self.ServerStatus = channel.unary_unary(
                '/NavigationConsole/ServerStatus',
                request_serializer=console__pb2.Request.SerializeToString,
                response_deserializer=console__pb2.NavigationServerMsg.FromString,
                _registered_method=True)
        self.ServerCmd = channel.unary_unary(
                '/NavigationConsole/ServerCmd',
                request_serializer=console__pb2.Request.SerializeToString,
                response_deserializer=console__pb2.Response.FromString,
                _registered_method=True)
        self.GetDevices = channel.unary_stream(
                '/NavigationConsole/GetDevices',
                request_serializer=console__pb2.Request.SerializeToString,
                response_deserializer=console__pb2.N2KDeviceMsg.FromString,
                _registered_method=True)


class NavigationConsoleServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetCouplers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCoupler(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CouplerCmd(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ServerStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ServerCmd(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDevices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NavigationConsoleServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCouplers': grpc.unary_stream_rpc_method_handler(
                    servicer.GetCouplers,
                    request_deserializer=console__pb2.Request.FromString,
                    response_serializer=console__pb2.CouplerMsg.SerializeToString,
            ),
            'GetCoupler': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCoupler,
                    request_deserializer=console__pb2.Request.FromString,
                    response_serializer=console__pb2.CouplerMsg.SerializeToString,
            ),
            'CouplerCmd': grpc.unary_unary_rpc_method_handler(
                    servicer.CouplerCmd,
                    request_deserializer=console__pb2.Request.FromString,
                    response_serializer=console__pb2.Response.SerializeToString,
            ),
            'ServerStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.ServerStatus,
                    request_deserializer=console__pb2.Request.FromString,
                    response_serializer=console__pb2.NavigationServerMsg.SerializeToString,
            ),
            'ServerCmd': grpc.unary_unary_rpc_method_handler(
                    servicer.ServerCmd,
                    request_deserializer=console__pb2.Request.FromString,
                    response_serializer=console__pb2.Response.SerializeToString,
            ),
            'GetDevices': grpc.unary_stream_rpc_method_handler(
                    servicer.GetDevices,
                    request_deserializer=console__pb2.Request.FromString,
                    response_serializer=console__pb2.N2KDeviceMsg.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'NavigationConsole', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('NavigationConsole', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class NavigationConsole(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetCouplers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/NavigationConsole/GetCouplers',
            console__pb2.Request.SerializeToString,
            console__pb2.CouplerMsg.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCoupler(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/NavigationConsole/GetCoupler',
            console__pb2.Request.SerializeToString,
            console__pb2.CouplerMsg.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CouplerCmd(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/NavigationConsole/CouplerCmd',
            console__pb2.Request.SerializeToString,
            console__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ServerStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/NavigationConsole/ServerStatus',
            console__pb2.Request.SerializeToString,
            console__pb2.NavigationServerMsg.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ServerCmd(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/NavigationConsole/ServerCmd',
            console__pb2.Request.SerializeToString,
            console__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDevices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/NavigationConsole/GetDevices',
            console__pb2.Request.SerializeToString,
            console__pb2.N2KDeviceMsg.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
